FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Maintenance-Tracker

This is an application that provides admins with the ability to reach out to operations or repairs department regarding repair or maintenance requests and monitor the status of their request.

## user management [/api/v2/auth/signup]


### Create a New User [POST]

Create new users

+ Request (application/json)

        {
        "username": "thiga",
        "useremail": "thiga@andela.com",
        "userpassword":"ps123",
        "userpassword2":"ps123"
        }

+ Response 200 (application/json)

    + Headers

    + Body

            {"response": "You have succesfully registered"}
+ Response 400 (application/json)

    + Headers

    + Body
            {"response": "please enter a username"}
 
 + Response 400 (application/json)

    + Headers

    + Body
             {"response": "Enter a password more than 4 charachters"}
 + Response 400 (application/json)

    + Headers

    + Body
             {"response": "please enter an usermail"}
+ Response 400 (application/json)

    + Headers

    + Body
             {"response": "please enter a password"}
+ Response 400 (application/json)

    + Headers

    + Body
             {"response": "please confirm your password"}
+ Response 400 (application/json)

    + Headers

    + Body
             {"response": "please enter matching passwords"}
             
             
+ Response 400 (application/json)

    + Headers

    + Body             
             {"response": "You have already been registered"}

## [/api/v2/auth/login]
### User Login [POST]

Users can login to the system

+ Request (application/json)

        {
        "useremail": "thiga@andela.com",
        "userpassword":"ps123"
        }

+ Response 200 (application/json)

    + Headers

    + Body

            {
    [
    {
        "Response": "you have loged in"
    },
    {
        "token": [
            "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwdWJsaWNpZCI6MywidGhlcm9sZSI6MiwiZXhwIjoxNTI4Njk0NTQ4fQ.3ToXFItKFKIKMvQ0gZxBhFMqslrT-hJjim4hY0JYXl0",
            200
        ]
    }
]
}
+ Response 400 (application/json)

    + Headers

    + Body
            {"response": "email is required"}
 
 + Response 400 (application/json)

    + Headers

    + Body
             {"response": "Enter a password more than 4 charachters"}
 + Response 400 (application/json)

    + Headers

    + Body
             {"response": "password is required"}
+ Response 400 (application/json)

    + Headers

    + Body
             {"response": "Unregistered email"}
+ Response 400 (application/json)

    + Headers

    + Body
             {"response": "Invalid credentials"}
             
## [/api/v2/users/logout]
### User Logout [POST]

Users can logout of the system

+ Request (application/json)

        

+ Response 200 (application/json)

    + Headers

    + Body

            {
    "response": "You have logged out"
}
             
## Requests [/api/v2/users/requests]

### List all requests [GET]
This returns all requests as required

This action returns a 200 status code along with a JSON body.

+ Response 200 (application/json)

        {
    "requests": [
        {
            "requestdate": "Fri, 08 Jun 2018 09:10:53 GMT",
            "requestdescription": " and The other req description",
            "requestid": 6,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "some another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Fri, 08 Jun 2018 08:09:36 GMT",
            "requestdescription": "Edited The other req description",
            "requestid": 5,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "edited another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Fri, 08 Jun 2018 02:29:53 GMT",
            "requestdescription": "Edited The other req description",
            "requestid": 3,
            "requestorid": 2,
            "requeststatus": 2,
            "requesttitle": "edited another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Sat, 09 Jun 2018 23:42:49 GMT",
            "requestdescription": "The other req description",
            "requestid": 9,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Sat, 09 Jun 2018 19:46:24 GMT",
            "requestdescription": "The other edited req description",
            "requestid": 8,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Fri, 08 Jun 2018 07:52:49 GMT",
            "requestdescription": "The other req description",
            "requestid": 4,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "edited 4 another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Fri, 08 Jun 2018 13:35:04 GMT",
            "requestdescription": "Edited The other req description",
            "requestid": 7,
            "requestorid": 2,
            "requeststatus": 4,
            "requesttitle": "edited another request title",
            "requesttype": 2
        }
    ]
}

## [/api/v2/users/requests/{id}]
### List one request [GET]
This returns one requests as required

This action returns a 200 status code along with a JSON body.

+ Response 200 (application/json)

        {
    "requests": [
        {
            "requestdate": "Fri, 08 Jun 2018 07:52:49 GMT",
            "requestdescription": "The other req description",
            "requestid": 4,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "edited 4 another request title",
            "requesttype": 2
        }
    ]
}

## [/api/v2/users/requests]
### Create request [POST]

Users can create new requests

+ Request (application/json)

       {   
            "requesttitle": "another request title",
            "requestdescription": "The other req description",
            "requesttype": 2
        }

+ Response 200 (application/json)

    + Headers

    + Body

           {
    "response": "Created 'another request title' request successfully"
}
+ Response 400 (application/json)

    + Headers

    + Body
            {"response": "Enter request title"}
+ Response 400 (application/json)

    + Headers

    + Body
            {"response": "Enter request description"}
+ Response 400 (application/json)

    + Headers

    + Body
            {"response": "Enter request type"}
            
## [/api/v2/users/requests/id]
### Edit a request [PUT]

Users can edit existing requests

+ Request (application/json)

       {   
            "requesttitle": "Edited request title",
            "requestdescription": "The other req description",
            "requesttype": 2
        }

+ Response 200 (application/json)

    + Headers

    + Body

          {
    "requests": "request edited"
}
+ Response 500 (application/json)

    + Headers

    + Body
            {"requests": "You have entered an invalid request id"}
+ Response 400 (application/json)

    + Headers

    + Body
            {"respons": "Cannot edit this request because it has been verified by an administrator'"}
+ Response 500 (application/json)

    + Headers

    + Body
            {"respons": "Cannot edit this request'"}
            
## Administration [/api/v2/requests]


### Get all requests from all users [GET]

Get all requests from all users

+ Request (application/json)

+ Response 200 (application/json)

    + Headers

    + Body

           {
    "requests": [
        {
            "requestdate": "Fri, 08 Jun 2018 09:10:53 GMT",
            "requestdescription": " and The other req description",
            "requestid": 6,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "some another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Fri, 08 Jun 2018 08:09:36 GMT",
            "requestdescription": "Edited The other req description",
            "requestid": 5,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "edited another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Fri, 08 Jun 2018 02:29:53 GMT",
            "requestdescription": "Edited The other req description",
            "requestid": 3,
            "requestorid": 2,
            "requeststatus": 2,
            "requesttitle": "edited another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Sat, 09 Jun 2018 23:42:49 GMT",
            "requestdescription": "The other req description",
            "requestid": 9,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Sat, 09 Jun 2018 19:46:24 GMT",
            "requestdescription": "The other edited req description",
            "requestid": 8,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Fri, 08 Jun 2018 13:35:04 GMT",
            "requestdescription": "Edited The other req description",
            "requestid": 7,
            "requestorid": 2,
            "requeststatus": 4,
            "requesttitle": "edited another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Mon, 11 Jun 2018 08:06:39 GMT",
            "requestdescription": "The other req description",
            "requestid": 10,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "another request title",
            "requesttype": 2
        },
        {
            "requestdate": "Fri, 08 Jun 2018 07:52:49 GMT",
            "requestdescription": "The other req description",
            "requestid": 4,
            "requestorid": 2,
            "requeststatus": 1,
            "requesttitle": "Edited request title",
            "requesttype": 2
        }
    ]
}
##  [/api/v2/requests/id/approve]

### Approve a request from a user [PUT]

Approve a users request

+ Request (application/json)
        {"requeststatus":2 }

+ Response 200 (application/json)

    + Headers

    + Body
    {
    "response": "request approved"
}

##  [/api/v2/requests/id/disapprove]


### Disapprove request from a user [GET]

disapprove a single request 

+ Request (application/json)
{"requeststatus":3}

+ Response 200 (application/json)

    + Headers

    + Body
        {"response": "request Disapproved"}


##  [/api/v2/requests/id/resolve]


### Resolve request from a user [GET]

Resolve a single request 

+ Request (application/json)
{"requeststatus":4}

+ Response 200 (application/json)

    + Headers

    + Body
        {"requests": "request resolved"}